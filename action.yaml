name: 'Build Image'
description: 'Build image from dockerfile'
inputs:
  aws-access-key-id:  # id of input
    description: 'AWS access key'
    required: true
  aws-secret-access-key:  # id of input
    description: 'AWS secret key'
    required: true
  aws-region:  # id of input
    description: 'AWS region'
    required: true
  ecr-repository:  # id of input
    description: 'ECR repository'
    required: true
  image-tag:  # id of input
    description: 'Image TAG'
    required: true
outputs:
  registry:
    description: "ECR Registry"
    value: ${{ steps.login-ecr.outputs.registry }}
  user:
    description: "ECR User"
    value: ${{ steps.login-ecr.outputs.docker_username_071032557399_dkr_ecr_sa_east_1_amazonaws_com }}
  pass:
    description: "ECR Password"
    value: ${{ steps.ecr.outputs.token }}
  imageRepo:
    description: "ECR Image Repository"
    value: ${{ steps.tag_image.outputs.image-repo }}
  imageTag:
    description: "Image TAG"
    value: ${{ steps.tag_image.outputs.image-tag }}

runs:
  using: "composite"
  steps:
    ## Clone do código
    - name: Check out code
      uses: actions/checkout@v2
    
    ## Configurando as credenciais AWS
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ inputs.aws-access-key-id }}
        aws-secret-access-key: ${{ inputs.aws-secret-access-key }}
        aws-region: ${{ inputs.aws-region }}
        mask-aws-account-id: 'no'
    
    ## Fazendo login no AWS ECR
    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    ## Pegando token de login no ECR para utilizar no job "deploy"
    - name: Get token to login to Amazon ECR
      id: ecr
      uses: PhutureCorp/ecr-login-token@v0.8.0
      with:
        registry: ${{ steps.login-ecr.outputs.registry }}
        username: ${{ inputs.aws-access-key-id }}
        password: ${{ inputs.aws-secret-access-key }}
    
    ## Fazendo build da imagem da aplicação e armazenando no ECR
    - name: Tag image with latest Amazon ECR
      id: tag_image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: ${{ inputs.ecr-repository }}
        IMAGE_TAG: ${{ inputs.image-tag }}
        GIT_BRANCH_REF: ${{ github.head_ref }}
      shell: bash
      run: |
        MANIFEST=$(aws ecr batch-get-image --repository-name $ECR_REPOSITORY --image-ids imageTag=$IMAGE_TAG-staging-$GIT_BRANCH_REF --query 'images[].imageManifest' --output text)
        aws ecr put-image --repository-name $ECR_REPOSITORY --image-tag latest --image-manifest "$MANIFEST"
        aws ecr put-image --repository-name $ECR_REPOSITORY --image-tag $IMAGE_TAG --image-manifest "$MANIFEST"
        aws ecr batch-delete-image --repository-name $ECR_REPOSITORY --image-ids imageTag=$IMAGE_TAG-staging-$GIT_BRANCH_REF
        echo "::set-output name=image-repo::$ECR_REGISTRY/$ECR_REPOSITORY"
        echo "::set-output name=image-tag::$IMAGE_TAG"