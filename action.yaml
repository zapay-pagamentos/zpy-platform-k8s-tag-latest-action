name: 'Build Image'
description: 'Build image from dockerfile'
inputs:
  ecr-repository:  # id of input
    description: 'ECR repository'
    required: true
  ecr-registry:  # id of input
    description: 'ECR registry'
    required: true
  image-tag:  # id of input
    description: 'Image TAG'
    required: true
outputs:
  imageTag:
    description: "Image TAG"
    value: ${{ steps.tag_image.outputs.image-tag }}

runs:
  using: "composite"
  steps:
    ## Clone do código
    - name: Check out code
      uses: actions/checkout@v2
    
    ## Fazendo login no AWS ECR
    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2
  
    ## Fazendo build da imagem da aplicação e armazenando no ECR
    - name: Tag image with latest Amazon ECR
      id: tag_image
      env:
        ECR_REGISTRY: ${{ inputs.ecr-registry }}
        ECR_REPOSITORY: ${{ inputs.ecr-repository }}
        IMAGE_TAG: ${{ inputs.image-tag }}
        GIT_BRANCH_REF: ${{ github.head_ref }}
      shell: bash
      run: |
        staging_image_tag=$(echo $GIT_BRANCH_REF | sed 's/\//_/g')
        MANIFEST=$(aws ecr batch-get-image --repository-name $ECR_REPOSITORY --image-ids imageTag=$staging_image_tag --query 'images[].imageManifest' --output text)
        aws ecr put-image --repository-name $ECR_REPOSITORY --image-tag latest --image-manifest "$MANIFEST"
        aws ecr put-image --repository-name $ECR_REPOSITORY --image-tag $IMAGE_TAG --image-manifest "$MANIFEST"
        echo "::set-output name=image-tag::$IMAGE_TAG"